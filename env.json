{
  "openapi"   : "3.0.0",
  "info"      : {
    "title"      : "DEMO  API DOCS",
    "description": "nodejs-express-mysql-api-boilerplate API ",
    "version"    : "1.0.0"
  },
  "paths"     : {
    "/auth/register"               : {
      "post": {
        "summary"    : "Register as user",
        "tags"       : [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content" : {
            "application/json": {
              "schema": {
                "type"      : "object",
                "required"  : [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "firstname": {
                    "type": "string"
                  },
                  "lastname" : {
                    "type": "string"
                  },
                  "role"     : {
                    "type": "string"
                  },
                  "email"    : {
                    "type"       : "string",
                    "format"     : "email",
                    "description": "must be unique"
                  },
                  "password" : {
                    "type"       : "string",
                    "format"     : "password",
                    "minLength"  : 8,
                    "description": "At least one number and one letter"
                  }
                },
                "example"   : {
                  "name"    : "fake name",
                  "email"   : "fake@example.com",
                  "password": "password1"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login"                  : {
      "post": {
        "summary"    : "Login",
        "tags"       : [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content" : {
            "application/json": {
              "schema": {
                "type"      : "object",
                "required"  : [
                  "email",
                  "password"
                ],
                "properties": {
                  "email"   : {
                    "type"  : "string",
                    "format": "email"
                  },
                  "password": {
                    "type"  : "string",
                    "format": "password"
                  }
                },
                "example"   : {
                  "email"   : "fake@example.com",
                  "password": "password1"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout"                 : {
      "post": {
        "summary"    : "Logout",
        "tags"       : [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content" : {
            "application/json": {
              "schema": {
                "type"      : "object",
                "required"  : [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "example"   : {
                  "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh-tokens"         : {
      "post": {
        "summary"    : "Refresh auth tokens",
        "tags"       : [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content" : {
            "application/json": {
              "schema": {
                "type"      : "object",
                "required"  : [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "example"   : {
                  "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg"
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password"        : {
      "post": {
        "summary"    : "Forgot password",
        "description": "An email will be sent to reset password.",
        "tags"       : [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content" : {
            "application/json": {
              "schema": {
                "type"      : "object",
                "required"  : [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type"  : "string",
                    "format": "email"
                  }
                },
                "example"   : {
                  "email": "fake@example.com"
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password"         : {
      "post": {
        "summary"    : "Reset password",
        "tags"       : [
          "Auth"
        ],
        "parameters" : [
          {
            "in"         : "query",
            "name"       : "token",
            "required"   : true,
            "schema"     : {
              "type": "string"
            },
            "description": "The reset password token"
          }
        ],
        "requestBody": {
          "required": true,
          "content" : {
            "application/json": {
              "schema": {
                "type"      : "object",
                "required"  : [
                  "password"
                ],
                "properties": {
                  "password": {
                    "type"       : "string",
                    "format"     : "password",
                    "minLength"  : 8,
                    "description": "At least one number and one letter"
                  }
                },
                "example"   : {
                  "password": "password1"
                }
              }
            }
          }
        }
      }
    },
    "/auth/send-verification-email": {
      "post": {
        "summary"    : "Send verification email",
        "description": "An email will be sent to verify email.",
        "tags"       : [
          "Auth"
        ],
        "security"   : [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/verify-email"           : {
      "post": {
        "summary"   : "verify email",
        "tags"      : [
          "Auth"
        ],
        "parameters": [
          {
            "in"         : "query",
            "name"       : "token",
            "required"   : true,
            "schema"     : {
              "type": "string"
            },
            "description": "The verify email token"
          }
        ]
      }
    },
    "/"                            : {
      "get": {
        "tags"       : [
          "hello"
        ],
        "description": "API is running",
        "responses"  : {
          "200": {
            "description": "API is running"
          }
        }
      }
    },
    "/users"                       : {
      "post": {
        "summary"    : "Create a user",
        "description": "Only admins can create other users.",
        "tags"       : [
          "Users"
        ],
        "security"   : [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content" : {
            "application/json": {
              "schema": {
                "type"      : "object",
                "required"  : [
                  "name",
                  "email",
                  "password",
                  "role"
                ],
                "properties": {
                  "name"    : {
                    "type": "string"
                  },
                  "email"   : {
                    "type"       : "string",
                    "format"     : "email",
                    "description": "must be unique"
                  },
                  "password": {
                    "type"       : "string",
                    "format"     : "password",
                    "minLength"  : 8,
                    "description": "At least one number and one letter"
                  },
                  "role"    : {
                    "type": "string",
                    "enum": [
                      "user",
                      "admin"
                    ]
                  }
                },
                "example"   : {
                  "name"    : "fake name",
                  "email"   : "fake@example.com",
                  "password": "password1",
                  "role"    : "user"
                }
              }
            }
          }
        }
      },
      "get" : {
        "summary"    : "Get all users",
        "description": "Only admins can retrieve all users.",
        "tags"       : [
          "Users"
        ],
        "security"   : [
          {
            "bearerAuth": []
          }
        ],
        "parameters" : [
          {
            "in"         : "query",
            "name"       : "name",
            "schema"     : {
              "type": "string"
            },
            "description": "User name"
          },
          {
            "in"         : "query",
            "name"       : "role",
            "schema"     : {
              "type": "string"
            },
            "description": "User role"
          },
          {
            "in"         : "query",
            "name"       : "sortBy",
            "schema"     : {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in"         : "query",
            "name"       : "limit",
            "schema"     : {
              "type"   : "integer",
              "minimum": 1
            },
            "default"    : 10,
            "description": "Maximum number of users"
          },
          {
            "in"         : "query",
            "name"       : "page",
            "schema"     : {
              "type"   : "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ]
      }
    },
    "/users/{id}"                  : {
      "get"   : {
        "summary"    : "Get a user",
        "description": "Logged in users can fetch only their own user information. Only admins can fetch other users.",
        "tags"       : [
          "Users"
        ],
        "security"   : [
          {
            "bearerAuth": []
          }
        ],
        "parameters" : [
          {
            "in"         : "path",
            "name"       : "id",
            "required"   : true,
            "schema"     : {
              "type": "string"
            },
            "description": "User id"
          }
        ]
      },
      "patch" : {
        "summary"    : "Update a user",
        "description": "Logged in users can only update their own information. Only admins can update other users.",
        "tags"       : [
          "Users"
        ],
        "security"   : [
          {
            "bearerAuth": []
          }
        ],
        "parameters" : [
          {
            "in"         : "path",
            "name"       : "id",
            "required"   : true,
            "schema"     : {
              "type": "string"
            },
            "description": "User id"
          }
        ],
        "requestBody": {
          "required": true,
          "content" : {
            "application/json": {
              "schema": {
                "type"      : "object",
                "properties": {
                  "name"    : {
                    "type": "string"
                  },
                  "email"   : {
                    "type"       : "string",
                    "format"     : "email",
                    "description": "must be unique"
                  },
                  "password": {
                    "type"       : "string",
                    "format"     : "password",
                    "minLength"  : 8,
                    "description": "At least one number and one letter"
                  }
                },
                "example"   : {
                  "name"    : "fake name",
                  "email"   : "fake@example.com",
                  "password": "password1"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary"    : "Delete a user",
        "description": "Logged in users can delete only themselves. Only admins can delete other users.",
        "tags"       : [
          "Users"
        ],
        "security"   : [
          {
            "bearerAuth": []
          }
        ],
        "parameters" : [
          {
            "in"         : "path",
            "name"       : "id",
            "required"   : true,
            "schema"     : {
              "type": "string"
            },
            "description": "User id"
          }
        ]
      }
    }
  },
  "components": {},
  "tags"      : [
    {
      "name"       : "Auth",
      "description": "Authentication"
    },
    {
      "name"       : "Users",
      "description": "User management and retrieval"
    }
  ]
}